#!/usr/bin/python -E
#
# Authors:
#   Rob Crittenden <rcritten@redhat.com>
#
# Copyright (C) 2012  Red Hat
# see file 'COPYING' for use and warranty information
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import sys
import syslog
from ipapython import services as ipaservices
from ipapython import dogtag
from ipaserver.install import certs
from ipalib import api

nickname = sys.argv[1]

api.bootstrap(context='restart')
api.finalize()

configured_constants = dogtag.configured_constants(api)
alias_dir = configured_constants.ALIAS_DIR
dogtag_service = ipaservices.knownservices[configured_constants.SERVICE_NAME]
dogtag_instance = configured_constants.PKI_INSTANCE_NAME

# dogtag opens its NSS database in read/write mode so we need it
# shut down so certmonger can open it read/write mode. This avoids
# database corruption. It should already be stopped by the pre-command
# but lets be sure.
if dogtag_service.is_running(dogtag_instance):
    syslog.syslog(
        syslog.LOG_NOTICE, "Stopping %s" % dogtag_service.service_name)
    try:
        dogtag_service.stop(dogtag_instance)
    except Exception, e:
        syslog.syslog(
            syslog.LOG_ERR,
            "Cannot stop %s: %s" % (dogtag_service.service_name, e))
    else:
        syslog.syslog(
            syslog.LOG_NOTICE, "Stopped %s" % dogtag_service.service_name)

# Fix permissions on the audit cert if we're updating it
if nickname == 'auditSigningCert cert-pki-ca':
    db = certs.CertDB(api.env.realm, nssdir=alias_dir)
    args = ['-M',
            '-n', nickname,
            '-t', 'u,u,Pu',
           ]
    db.run_certutil(args)

syslog.syslog(syslog.LOG_NOTICE, 'Starting %s' % dogtag_service.service_name)
try:
    dogtag_service.start(dogtag_instance)
except Exception, e:
    syslog.syslog(
        syslog.LOG_ERR,
        "Cannot start %s: %s" % (dogtag_service.service_name, e))
else:
    syslog.syslog(
        syslog.LOG_NOTICE, "Started %s" % dogtag_service.service_name)
