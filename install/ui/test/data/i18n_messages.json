{
    "error": null, 
    "id": null, 
    "principal": "UNKNOWN", 
    "result": {
        "texts": {
            "actions": {
                "apply": "Apply", 
                "automember_rebuild": "Rebuild auto membership", 
                "automember_rebuild_confirm": "Are you sure you want to rebuild auto membership?", 
                "automember_rebuild_success": "Automember rebuild membership task completed", 
                "confirm": "Are you sure you want to proceed with the action?", 
                "delete_confirm": "Are you sure you want to delete ${object}?", 
                "disable_confirm": "Are you sure you want to disable ${object}?", 
                "enable_confirm": "Are you sure you want to enable ${object}?", 
                "title": "Actions"
            }, 
            "ajax": {
                "401": {
                    "message": "Your session has expired. Please log in again."
                }
            }, 
            "association": {
                "add": {
                    "ipasudorunas": "Add RunAs ${other_entity} into ${entity} ${primary_key}", 
                    "ipasudorunasgroup": "Add RunAs Groups into ${entity} ${primary_key}", 
                    "managedby": "Add ${other_entity} Managing ${entity} ${primary_key}", 
                    "member": "Add ${other_entity} into ${entity} ${primary_key}", 
                    "memberallowcmd": "Add Allow ${other_entity} into ${entity} ${primary_key}", 
                    "memberdenycmd": "Add Deny ${other_entity} into ${entity} ${primary_key}", 
                    "memberof": "Add ${entity} ${primary_key} into ${other_entity}"
                }, 
                "added": "${count} item(s) added", 
                "direct_membership": "Direct Membership", 
                "filter_placeholder": "Filter available ${other_entity}", 
                "indirect_membership": "Indirect Membership", 
                "no_entries": "No entries.", 
                "paging": "Showing ${start} to ${end} of ${total} entries.", 
                "remove": {
                    "ipasudorunas": "Remove RunAs ${other_entity} from ${entity} ${primary_key}", 
                    "ipasudorunasgroup": "Remove RunAs Groups from ${entity} ${primary_key}", 
                    "managedby": "Remove ${other_entity} Managing ${entity} ${primary_key}", 
                    "member": "Remove ${other_entity} from ${entity} ${primary_key}", 
                    "memberallowcmd": "Remove Allow ${other_entity} from ${entity} ${primary_key}", 
                    "memberdenycmd": "Remove Deny ${other_entity} from ${entity} ${primary_key}", 
                    "memberof": "Remove ${entity} ${primary_key} from ${other_entity}"
                }, 
                "removed": "${count} item(s) removed", 
                "show_results": "Show Results"
            }, 
            "authtype": {
                "auth_indicator": "Authentication indicator", 
                "auth_indicators": "Authentication indicators", 
                "config_tooltip": "<p>Implicit method (password) will be used if no method is chosen.</p><p><strong>Password + Two-factor:</strong> LDAP and Kerberos allow authentication with either one of the authentication types but Kerberos uses pre-authentication method which requires to use armor ccache.</p><p><strong>RADIUS with another type:</strong> Kerberos always use RADIUS, but LDAP never does. LDAP only recognize the password and two-factor authentication options.</p>", 
                "custom_auth_ind_title": "Add Custom Authentication Indicator", 
                "otp": "OTP", 
                "type_disabled": "Disable per-user override", 
                "type_otp": "Two factor authentication (password + OTP)", 
                "type_password": "Password", 
                "type_radius": "RADIUS", 
                "type_pkinit": "PKINIT", 
                "type_hardened": "Hardened Password (by SPAKE or FAST)", 
                "user_tooltip": "<p>Per-user setting, overwrites the global setting if any option is checked.</p><p><strong>Password + Two-factor:</strong> LDAP and Kerberos allow authentication with either one of the authentication types but Kerberos uses pre-authentication method which requires to use armor ccache.</p><p><strong>RADIUS with another type:</strong> Kerberos always use RADIUS, but LDAP never does. LDAP only recognize the password and two-factor authentication options.</p>"
            }, 
            "buttons": {
                "about": "About", 
                "activate": "Activate", 
                "add": "Add", 
                "add_and_add_another": "Add and Add Another", 
                "add_and_close": "Add and Close", 
                "add_and_edit": "Add and Edit", 
                "add_many": "Add Many", 
                "apply": "Apply", 
                "back": "Back", 
                "cancel": "Cancel", 
                "clear": "Clear", 
                "clear_title": "Clear all fields on the page.", 
                "close": "Close", 
                "disable": "Disable", 
                "download": "Download", 
                "download_title": "Download certificate as PEM formatted file.", 
                "edit": "Edit", 
                "enable": "Enable", 
                "filter": "Filter", 
                "find": "Find", 
                "get": "Get", 
                "hide": "Hide", 
                "issue": "Issue", 
                "match": "Match", 
                "match_title": "Match users according to certificate.", 
                "ok": "OK", 
                "refresh": "Refresh", 
                "refresh_title": "Reload current settings from the server.", 
                "remove": "Delete", 
                "remove_hold": "Remove hold", 
                "reset": "Reset", 
                "reset_password_and_login": "Reset Password and Login", 
                "restore": "Restore", 
                "retry": "Retry", 
                "revert": "Revert", 
                "revert_title": "Undo all unsaved changes.", 
                "revoke": "Revoke", 
                "save": "Save", 
                "set": "Set", 
                "show": "Show", 
                "stage": "Stage", 
                "unapply": "Un-apply", 
                "update": "Update", 
                "view": "View"
            }, 
            "customization": {
                "customization": "Customization", 
                "table_pagination": "Pagination Size"
            }, 
            "details": {
                "collapse_all": "Collapse All", 
                "expand_all": "Expand All", 
                "general": "General", 
                "identity": "Identity Settings", 
                "settings": "${entity} ${primary_key} Settings", 
                "to_top": "Back to Top", 
                "updated": "${entity} ${primary_key} updated"
            }, 
            "dialogs": {
                "about_message": "${product}, version: ${version}", 
                "about_title": "About", 
                "add_confirmation": "${entity} successfully added", 
                "add_custom_value": "Add custom value", 
                "add_title": "Add ${entity}", 
                "available": "Available", 
                "batch_error_message": "Some operations failed.", 
                "batch_error_title": "Operations Error", 
                "confirmation": "Confirmation", 
                "custom_value": "Custom value", 
                "dirty_message": "This page has unsaved changes. Please save or revert.", 
                "dirty_title": "Unsaved Changes", 
                "edit_title": "Edit ${entity}", 
                "hide_details": "Hide details", 
                "prospective": "Prospective", 
                "redirection": "Redirection", 
                "remove_empty": "Select entries to be removed.", 
                "remove_title": "Remove ${entity}", 
                "result": "Result", 
                "show_details": "Show details", 
                "success": "Success", 
                "validation_message": "Input form contains invalid or missing values.", 
                "validation_title": "Validation error"
            }, 
            "error_report": {
                "main_page": "Return to the main page and retry the operation", 
                "options": "Please try the following options:", 
                "problem_persists": "If the problem persists please contact the system administrator.", 
                "refresh": "Refresh the page.", 
                "reload": "Reload the browser.", 
                "title": "An error has occurred (${error})"
            }, 
            "errors": {
                "error": "Error", 
                "http_error": "HTTP Error", 
                "internal_error": "Internal Error", 
                "ipa_error": "IPA Error", 
                "no_response": "No response", 
                "unknown_error": "Unknown Error", 
                "url": "URL"
            }, 
            "facet_groups": {
                "managedby": "${primary_key} is managed by:", 
                "member": "${primary_key} members:", 
                "memberof": "${primary_key} is a member of:"
            }, 
            "facets": {
                "details": "Settings", 
                "search": "Search"
            }, 
            "false": "False", 
            "keytab": {
                "add_create": "Allow ${other_entity} to create keytab of ${primary_key}", 
                "add_retrive": "Allow ${other_entity} to retrieve keytab of ${primary_key}", 
                "allowed_to_create": "Allowed to create keytab", 
                "allowed_to_retrieve": "Allowed to retrieve keytab", 
                "remove_create": "Disallow ${other_entity} to create keytab of ${primary_key}", 
                "remove_retrieve": "Disallow ${other_entity} to retrieve keytab of ${primary_key}"
            }, 
            "krbaliases": {
                "add_krbal_label": "New kerberos principal alias", 
                "adder_title": "Add Kerberos Principal Alias", 
                "remove_message": "Do you want to remove kerberos alias ${alias}?", 
                "remove_title": "Remove Kerberos Alias"
            }, 
            "krbauthzdata": {
                "inherited": "Inherited from server configuration", 
                "mspac": "MS-PAC", 
                "override": "Override inherited settings", 
                "pad": "PAD"
            }, 
            "login": {
                "authenticating": "Authenticating", 
                "form_auth": "<i class=\"fa fa-info-circle\"></i> To log in with <strong>username and password</strong>, enter them in the corresponding fields, then click 'Log in'.", 
                "header": "Logged In As", 
                "krb_auth_msg": "<i class=\"fa fa-info-circle\"></i> To log in with <strong>Kerberos</strong>, please make sure you have valid tickets (obtainable via kinit) and <a href='http://${host}/ipa/config/unauthorized.html'>configured</a> the browser correctly, then click 'Log in'.", 
                "loading": "Loading", 
                "loading_md": "Loading data", 
                "login": "Log in", 
                "login_certificate": "Log In Using Certificate", 
                "login_certificate_desc": "Log in using personal certificate", 
                "logout": "Log out", 
                "logout_error": "Log out error", 
                "password": "Password", 
                "password_and_otp": "Password or Password+One-Time-Password", 
                "sync_otp_token": "Sync OTP Token", 
                "username": "Username"
            }, 
            "measurement_units": {
                "number_of_passwords": "number of passwords", 
                "seconds": "seconds"
            }, 
            "objects": {
                "aci": {
                    "attribute": "Attribute"
                }, 
                "automember": {
                    "add_condition": "Add Condition into ${pkey}", 
                    "add_rule": "Add Rule", 
                    "attribute": "Attribute", 
                    "default_host_group": "Default host group", 
                    "default_user_group": "Default user group", 
                    "exclusive": "Exclusive", 
                    "expression": "Expression", 
                    "hostgrouprule": "Host group rule", 
                    "hostgrouprules": "Host group rules", 
                    "inclusive": "Inclusive", 
                    "usergrouprule": "User group rule", 
                    "usergrouprules": "User group rules"
                }, 
                "automountkey": {}, 
                "automountlocation": {
                    "identity": "Automount Location Settings"
                }, 
                "automountmap": {
                    "direct": "Direct", 
                    "indirect": "Indirect", 
                    "map_type": "Map Type"
                }, 
                "caacl": {
                    "all": "All", 
                    "any_ca": "Any CA", 
                    "any_host": "Any Host", 
                    "any_profile": "Any Profile", 
                    "any_service": "Any Service", 
                    "anyone": "Anyone", 
                    "ipaenabledflag": "Rule status", 
                    "no_ca_msg": "If no CAs are specified, requests to the default CA are allowed.", 
                    "profile": "Profiles", 
                    "specified_cas": "Specified CAs", 
                    "specified_hosts": "Specified Hosts and Groups", 
                    "specified_profiles": "Specified Profiles", 
                    "specified_services": "Specified Services and Groups", 
                    "specified_users": "Specified Users and Groups", 
                    "who": "Permitted to have certificates issued"
                }, 
                "cert": {
                    "aa_compromise": "AA Compromise", 
                    "add_principal": "Add principal", 
                    "affiliation_changed": "Affiliation Changed", 
                    "ca": "CA", 
                    "ca_compromise": "CA Compromise", 
                    "certificate": "Certificate", 
                    "certificate_hold": "Certificate Hold", 
                    "certificates": "Certificates", 
                    "cessation_of_operation": "Cessation of Operation", 
                    "common_name": "Common Name", 
                    "delete_cert_end": "the certificate with serial number ", 
                    "download": "Download", 
                    "expires_on": "Expires On", 
                    "find_issuedon_from": "Issued on from", 
                    "find_issuedon_to": "Issued on to", 
                    "find_max_serial_number": "Maximum serial number", 
                    "find_min_serial_number": "Minimum serial number", 
                    "find_revocation_reason": "Revocation reason", 
                    "find_revokedon_from": "Revoked on from", 
                    "find_revokedon_to": "Revoked on to", 
                    "find_subject": "Subject", 
                    "find_validnotafter_from": "Valid not after from", 
                    "find_validnotafter_to": "Valid not after to", 
                    "find_validnotbefore_from": "Valid not before from", 
                    "find_validnotbefore_to": "Valid not before to", 
                    "fingerprints": "Fingerprints", 
                    "get_certificate": "Get Certificate", 
                    "hold_removed": "Certificate Hold Removed", 
                    "issue_certificate": "Issue New Certificate for ${entity} ${primary_key}", 
                    "issue_certificate_generic": "Issue New Certificate", 
                    "issued_by": "Issued By", 
                    "issued_on": "Issued On", 
                    "issued_to": "Issued To", 
                    "key_compromise": "Key Compromise", 
                    "missing": "No Valid Certificate", 
                    "new_cert_format": "Certificate in base64 or PEM format", 
                    "new_certificate": "New Certificate", 
                    "note": "Note", 
                    "organization": "Organization", 
                    "organizational_unit": "Organizational Unit", 
                    "present": "${count} certificate(s) present", 
                    "privilege_withdrawn": "Privilege Withdrawn", 
                    "reason": "Reason for Revocation", 
                    "remove_certificate_hold": "Remove Certificate Hold for ${entity} ${primary_key}", 
                    "remove_certificate_hold_confirmation": "Do you want to remove the certificate hold?", 
                    "remove_certificate_hold_simple": "Remove Certificate Hold", 
                    "remove_from_crl": "Remove from CRL", 
                    "remove_hold": "Remove Hold", 
                    "request_message": "<ol> <li>Create a certificate database or use an existing one. To create a new database:<br/> <code># certutil -N -d &lt;database path&gt;</code> </li> <li>Create a CSR with subject <em>CN=&lt;${cn_name}&gt;,O=&lt;realm&gt;</em>, for example:<br/> <code># certutil -R -d &lt;database path&gt; -a -g &lt;key size&gt; -s 'CN=${cn},O=${realm}'${san}</code> </li> <li> Copy and paste the CSR (from <em>-----BEGIN NEW CERTIFICATE REQUEST-----</em> to <em>-----END NEW CERTIFICATE REQUEST-----</em>) into the text area below: </li> </ol>", 
                    "request_message_san": " -8 '${cn}'", 
                    "requested": "Certificate requested", 
                    "revocation_reason": "Revocation reason", 
                    "revoke_certificate": "Revoke Certificate for ${entity} ${primary_key}", 
                    "revoke_certificate_simple": "Revoke Certificate", 
                    "revoke_confirmation": "Do you want to revoke this certificate? Select a reason from the pull-down list.", 
                    "revoked": "Certificate Revoked", 
                    "revoked_status": "REVOKED", 
                    "serial_number": "Serial Number", 
                    "serial_number_hex": "Serial Number (hex)", 
                    "sha1_fingerprint": "SHA1 Fingerprint", 
                    "sha256_fingerprint": "SHA256 Fingerprint", 
                    "status": "Status", 
                    "superseded": "Superseded", 
                    "unspecified": "Unspecified", 
                    "valid": "Valid Certificate Present", 
                    "valid_from": "Valid from", 
                    "valid_to": "Valid to", 
                    "validity": "Validity", 
                    "view_certificate": "Certificate for ${entity} ${primary_key}", 
                    "view_certificate_btn": "View Certificate"
                }, 
                "certmap": {
                    "adder_title": "Add Certificate Mapping Data", 
                    "certificate": "Certificate", 
                    "conf_str": "Configuration string", 
                    "data_label": "Certificate mapping data", 
                    "deleter_content": "Do you want to remove certificate mapping data ${data}?", 
                    "deleter_title": "Remove Certificate Mapping Data", 
                    "issuer": "Issuer", 
                    "issuer_subject": "Issuer and subject", 
                    "subject": "Subject", 
                    "version": "Version"
                }, 
                "certmap_match": {
                    "cert_data": "Certificate Data", 
                    "cert_for_match": "Certificate For Match", 
                    "domain": "Domain", 
                    "facet_label": "Certificate Mapping Match", 
                    "matched_users": "Matched Users", 
                    "userlogin": "User Login"
                }, 
                "config": {
                    "group": "Group Options", 
                    "search": "Search Options", 
                    "selinux": "SELinux Options", 
                    "service": "Service Options", 
                    "user": "User Options"
                }, 
                "delegation": {}, 
                "dnsconfig": {
                    "forward_first": "Forward first", 
                    "forward_none": "Forwarding disabled", 
                    "forward_only": "Forward only", 
                    "options": "Options", 
                    "update_dns": "Update System DNS Records", 
                    "update_dns_dialog_msg": "Do you want to update system DNS records?", 
                    "updated_dns": "System DNS records updated"
                }, 
                "dnsrecord": {
                    "data": "Data", 
                    "deleted_no_data": "DNS record was deleted because it contained no data.", 
                    "other": "Other Record Types", 
                    "ptr_redir_address_err": "Address not valid, can't redirect", 
                    "ptr_redir_create": "Create dns record", 
                    "ptr_redir_creating": "Creating record.", 
                    "ptr_redir_creating_err": "Record creation failed.", 
                    "ptr_redir_record": "Checking if record exists.", 
                    "ptr_redir_record_err": "Record not found.", 
                    "ptr_redir_title": "Redirection to PTR record", 
                    "ptr_redir_zone": "Zone found: ${zone}", 
                    "ptr_redir_zone_err": "Target reverse zone not found.", 
                    "ptr_redir_zones": "Fetching DNS zones.", 
                    "ptr_redir_zones_err": "An error occurred while fetching dns zones.", 
                    "redirection_dnszone": "You will be redirected to DNS Zone.", 
                    "standard": "Standard Record Types", 
                    "title": "Records for DNS Zone", 
                    "type": "Record Type"
                }, 
                "dnszone": {
                    "add_permission": "Add Permission", 
                    "add_permission_confirm": "Are you sure you want to add permission for DNS Zone ${object}?", 
                    "identity": "DNS Zone Settings", 
                    "remove_permission": "Remove Permission", 
                    "remove_permission_confirm": "Are you sure you want to remove permission for DNS Zone ${object}?", 
                    "skip_dns_check": "Skip DNS check", 
                    "skip_overlap_check": "Skip overlap check", 
                    "soamname_change_message": "Do you want to check if new authoritative nameserver address is in DNS", 
                    "soamname_change_title": "Authoritative nameserver change"
                }, 
                "domainlevel": {
                    "ipadomainlevel": "Level", 
                    "label": "Domain Level", 
                    "label_singular": "Domain Level", 
                    "set": "Set Domain Level"
                }, 
                "group": {
                    "details": "Group Settings", 
                    "external": "External", 
                    "group_categories": "Group categories", 
                    "groups": "Groups", 
                    "make_external": "Change to external group", 
                    "make_posix": "Change to POSIX group", 
                    "nonposix": "Non-POSIX", 
                    "posix": "POSIX", 
                    "type": "Group Type", 
                    "user_groups": "User Groups"
                }, 
                "hbacrule": {
                    "any_host": "Any Host", 
                    "any_service": "Any Service", 
                    "anyone": "Anyone", 
                    "host": "Accessing", 
                    "ipaenabledflag": "Rule status", 
                    "service": "Via Service", 
                    "specified_hosts": "Specified Hosts and Groups", 
                    "specified_services": "Specified Services and Groups", 
                    "specified_users": "Specified Users and Groups", 
                    "user": "Who"
                }, 
                "hbacsvc": {}, 
                "hbacsvcgroup": {
                    "services": "Services"
                }, 
                "hbactest": {
                    "access_denied": "Access Denied", 
                    "access_granted": "Access Granted", 
                    "include_disabled": "Include Disabled", 
                    "include_enabled": "Include Enabled", 
                    "label": "HBAC Test", 
                    "matched": "Matched", 
                    "missing_values": "Missing values: ", 
                    "new_test": "New Test", 
                    "rules": "Rules", 
                    "run_test": "Run Test", 
                    "specify_external": "Specify external ${entity}", 
                    "unmatched": "Unmatched"
                }, 
                "host": {
                    "certificate": "Host Certificate", 
                    "cn": "Host Name", 
                    "delete_key_unprovision": "Delete Key, Unprovision", 
                    "details": "Host Settings", 
                    "enrolled": "Enrolled", 
                    "enrollment": "Enrollment", 
                    "fqdn": "Fully Qualified Host Name", 
                    "generate_otp": "Generate OTP", 
                    "generated_otp": "Generated OTP", 
                    "keytab": "Kerberos Key", 
                    "keytab_missing": "Kerberos Key Not Present", 
                    "keytab_present": "Kerberos Key Present, Host Provisioned", 
                    "password": "One-Time-Password", 
                    "password_missing": "One-Time-Password Not Present", 
                    "password_present": "One-Time-Password Present", 
                    "password_reset_button": "Reset OTP", 
                    "password_reset_title": "Reset One-Time-Password", 
                    "password_set_button": "Set OTP", 
                    "password_set_success": "OTP set", 
                    "password_set_title": "Set One-Time-Password", 
                    "status": "Status", 
                    "unprovision": "Unprovision", 
                    "unprovision_confirmation": "Are you sure you want to unprovision this host?", 
                    "unprovision_title": "Unprovisioning ${entity}", 
                    "unprovisioned": "Host unprovisioned"
                }, 
                "hostgroup": {
                    "host_group": "Host Groups", 
                    "identity": "Host Group Settings"
                }, 
                "idoverridegroup": {
                    "anchor_label": "Group to override", 
                    "anchor_tooltip": "Enter trusted or IPA group name. Note: search doesn't list groups from trusted domains.", 
                    "anchor_tooltip_ad": "Enter trusted group name."
                }, 
                "idoverrideuser": {
                    "anchor_label": "User to override", 
                    "anchor_tooltip": "Enter trusted or IPA user login. Note: search doesn't list users from trusted domains.", 
                    "anchor_tooltip_ad": "Enter trusted user login.", 
                    "profile": "Profile"
                }, 
                "idrange": {
                    "details": "Range Settings", 
                    "ipabaseid": "Base ID", 
                    "ipabaserid": "Primary RID base", 
                    "ipaidrangesize": "Range size", 
                    "ipanttrusteddomainsid": "Domain SID", 
                    "ipasecondarybaserid": "Secondary RID base", 
                    "type": "Range type", 
                    "type_ad": "Active Directory domain", 
                    "type_ad_posix": "Active Directory domain with POSIX attributes", 
                    "type_detect": "Detect", 
                    "type_ipa": "IPA trust", 
                    "type_local": "Local domain", 
                    "type_winsync": "Active Directory winsync"
                }, 
                "idview": {
                    "appliedtohosts": "Applied to hosts", 
                    "appliedtohosts_title": "Applied to hosts", 
                    "appliesto_tab": "${primary_key} applies to:", 
                    "apply_hostgroups": "Apply to host groups", 
                    "apply_hostgroups_title": "Apply ID View ${primary_key} on hosts of ${entity}", 
                    "apply_hosts": "Apply to hosts", 
                    "apply_hosts_title": "Apply ID view ${primary_key} on ${entity}", 
                    "ipaassignedidview": "Assigned ID View", 
                    "overrides_tab": "${primary_key} overrides:", 
                    "unapply_hostgroups": "Un-apply from host groups", 
                    "unapply_hostgroups_all_title": "Un-apply ID Views from hosts of hostgroups", 
                    "unapply_hostgroups_title": "Un-apply ID View ${primary_key} from hosts of ${entity}", 
                    "unapply_hosts": "Un-apply", 
                    "unapply_hosts_all": "Un-apply from hosts", 
                    "unapply_hosts_all_title": "Un-apply ID Views from hosts", 
                    "unapply_hosts_confirm": "Are you sure you want to un-apply ID view from selected entries?", 
                    "unapply_hosts_title": "Un-apply ID View ${primary_key} from hosts"
                }, 
                "krbtpolicy": {
                    "identity": "Kerberos Ticket Policy"
                }, 
                "netgroup": {
                    "any_host": "Any Host", 
                    "anyone": "Anyone", 
                    "external": "External", 
                    "host": "Host", 
                    "hostgroups": "Host Groups", 
                    "hosts": "Hosts", 
                    "identity": "Netgroup Settings", 
                    "netgroups": "Netgroups", 
                    "specified_hosts": "Specified Hosts and Groups", 
                    "specified_users": "Specified Users and Groups", 
                    "user": "User", 
                    "usergroups": "User Groups", 
                    "users": "Users"
                }, 
                "otptoken": {
                    "add_token": "Add OTP Token", 
                    "app_link": "You can use <a href=\"${link}\" target=\"_blank\">FreeOTP<a/> as a software OTP token application.", 
                    "config_instructions": "Configure your token by scanning the QR code below. Click on the QR code if you see this on the device you want to configure.", 
                    "config_title": "Configure your token", 
                    "details": "OTP Token Settings", 
                    "disable": "Disable token", 
                    "enable": "Enable token", 
                    "show_qr": "Show QR code", 
                    "show_uri": "Show configuration uri", 
                    "type_hotp": "Counter-based (HOTP)", 
                    "type_totp": "Time-based (TOTP)"
                }, 
                "permission": {
                    "add_custom_attr": "Add Custom Attribute", 
                    "attribute": "Attribute", 
                    "filter": "Filter", 
                    "identity": "Permission settings", 
                    "managed": "Attribute breakdown", 
                    "target": "Target"
                }, 
                "privilege": {
                    "identity": "Privilege Settings"
                }, 
                "publickey": {
                    "set_dialog_help": "Public key:", 
                    "set_dialog_title": "Set public key", 
                    "show_set_key": "Show/Set key", 
                    "status_mod_ns": "Modified: key not set", 
                    "status_mod_s": "Modified", 
                    "status_new_ns": "New: key not set", 
                    "status_new_s": "New: key set"
                }, 
                "pwpolicy": {
                    "identity": "Password Policy"
                }, 
                "radiusproxy": {
                    "details": "RADIUS Proxy Server Settings"
                }, 
                "realmdomains": {
                    "check_dns": "Check DNS", 
                    "check_dns_confirmation": "Do you also want to perform DNS check?", 
                    "force_update": "Force Update", 
                    "identity": "Realm Domains"
                }, 
                "role": {
                    "identity": "Role Settings"
                }, 
                "selfservice": {}, 
                "selinuxusermap": {
                    "any_host": "Any Host", 
                    "anyone": "Anyone", 
                    "host": "Host", 
                    "specified_hosts": "Specified Hosts and Groups", 
                    "specified_users": "Specified Users and Groups", 
                    "user": "User"
                }, 
                "server_role": {
                    "label": "Server Roles", 
                    "label_singular": "Server Role"
                }, 
                "servers": {
                    "remove_server": "Delete Server", 
                    "remove_server_msg": "Deleting a server removes it permanently from the topology. Note that this is a non-reversible action.", 
                    "svc_warning_message": "It is strongly recommended to keep the following services installed on more than one server:", 
                    "svc_warning_title": "Warning: Consider service replication"
                }, 
                "service": {
                    "certificate": "Service Certificate", 
                    "delete_key_unprovision": "Delete Key, Unprovision", 
                    "details": "Service Settings", 
                    "host": "Host Name", 
                    "missing": "Kerberos Key Not Present", 
                    "provisioning": "Provisioning", 
                    "service": "Service", 
                    "status": "Status", 
                    "unprovision": "Unprovision", 
                    "unprovision_confirmation": "Are you sure you want to unprovision this service?", 
                    "unprovision_title": "Unprovisioning ${entity}", 
                    "unprovisioned": "Service unprovisioned", 
                    "valid": "Kerberos Key Present, Service Provisioned"
                }, 
                "sshkeystore": {
                    "keys": "SSH public keys", 
                    "set_dialog_help": "SSH public key:", 
                    "set_dialog_title": "Set SSH key", 
                    "show_set_key": "Show/Set key", 
                    "status_mod_ns": "Modified: key not set", 
                    "status_mod_s": "Modified", 
                    "status_new_ns": "New: key not set", 
                    "status_new_s": "New: key set"
                }, 
                "stageuser": {
                    "activate_confirm": "Are you sure you want to activate selected users?", 
                    "activate_one_confirm": "Are you sure you want to activate ${object}?", 
                    "activate_success": "${count} user(s) activated", 
                    "label": "Stage users", 
                    "preserved_label": "Preserved users", 
                    "stage_confirm": "Are you sure you want to stage selected users?", 
                    "stage_one_confirm": "Are you sure you want to stage ${object}?", 
                    "stage_success": "${count} users(s) staged", 
                    "undel_confirm": "Are you sure you want to restore selected users?", 
                    "undel_one_confirm": "Are you sure you want to restore ${object}?", 
                    "undel_success": "${count} user(s) restored", 
                    "user_categories": "User categories"
                }, 
                "sudocmd": {
                    "groups": "Groups"
                }, 
                "sudocmdgroup": {
                    "commands": "Commands"
                }, 
                "sudorule": {
                    "allow": "Allow", 
                    "any_command": "Any Command", 
                    "any_group": "Any Group", 
                    "any_host": "Any Host", 
                    "anyone": "Anyone", 
                    "command": "Run Commands", 
                    "deny": "Deny", 
                    "external": "External", 
                    "host": "Access this host", 
                    "ipaenabledflag": "Rule status", 
                    "option_added": "Option added", 
                    "option_removed": "${count} option(s) removed", 
                    "options": "Options", 
                    "runas": "As Whom", 
                    "specified_commands": "Specified Commands and Groups", 
                    "specified_groups": "Specified Groups", 
                    "specified_hosts": "Specified Hosts and Groups", 
                    "specified_users": "Specified Users and Groups", 
                    "user": "Who"
                }, 
                "topology": {
                    "autogenerated": "Autogenerated", 
                    "insufficient_domain_level": "Managed topology requires minimal domain level ${domainlevel}", 
                    "replication_config": "Replication configuration", 
                    "segment_details": "Segment details"
                }, 
                "trust": {
                    "account": "Account", 
                    "admin_account": "Administrative account", 
                    "blacklists": "SID blacklists", 
                    "details": "Trust Settings", 
                    "domain": "Domain", 
                    "establish_using": "Establish using", 
                    "fetch_domains": "Fetch domains", 
                    "ipantadditionalsuffixes": "Alternative UPN suffixes", 
                    "ipantflatname": "Domain NetBIOS name", 
                    "ipanttrusteddomainsid": "Domain Security Identifier", 
                    "preshared_password": "Pre-shared password", 
                    "trustdirection": "Trust direction", 
                    "truststatus": "Trust status", 
                    "trusttype": "Trust type"
                }, 
                "trustconfig": {
                    "options": "Options"
                }, 
                "user": {
                    "account": "Account Settings", 
                    "account_status": "Account Status", 
                    "activeuser_label": "Active users", 
                    "contact": "Contact Settings", 
                    "delete_mode": "Delete mode", 
                    "employee": "Employee Information", 
                    "error_changing_status": "Error changing account status", 
                    "krbpasswordexpiration": "Password expiration", 
                    "mailing": "Mailing Address", 
                    "misc": "Misc. Information", 
                    "mode_delete": "delete", 
                    "mode_preserve": "preserve", 
                    "noprivate": "No private group", 
                    "status_confirmation": "Are you sure you want to ${action} the user?<br/>The change will take effect immediately.", 
                    "status_link": "Click to ${action}", 
                    "unlock": "Unlock", 
                    "unlock_confirm": "Are you sure you want to unlock user ${object}?"
                }, 
                "vault": {
                    "add_warn_arch_ret": "Secrets can be added/retrieved to vault only by using vault-archive and vault-retrieve from CLI.", 
                    "add_warn_standard": "Content of 'standard' vaults can be seen by users with higher privileges (admins).", 
                    "asymmetric_type": "Asymmetric", 
                    "config_title": "Vaults Config", 
                    "group": "Group", 
                    "members": "Members", 
                    "my_vaults_title": "My User Vaults", 
                    "owners": "Owners", 
                    "service": "Service", 
                    "service_vaults_title": "Service Vaults", 
                    "shared": "Shared", 
                    "shared_vaults_title": "Shared Vaults", 
                    "standard_type": "Standard", 
                    "symmetric_type": "Symmetric", 
                    "type": "Vault Type", 
                    "type_tooltip": "Only standard vaults can be created in WebUI, use CLI for other types of vaults.", 
                    "user": "User", 
                    "user_vaults_title": "User Vaults"
                }
            }, 
            "password": {
                "current_password": "Current Password", 
                "current_password_required": "Current password is required", 
                "expires_in": "Your password expires in ${days} days.", 
                "first_otp": "First OTP", 
                "invalid_password": "The password or username you entered is incorrect.", 
                "new_password": "New Password", 
                "new_password_required": "New password is required", 
                "otp": "OTP", 
                "otp_info": "<i class=\"fa fa-info-circle\"></i> <strong>One-Time-Password(OTP):</strong> Generate new OTP code for each OTP field.", 
                "otp_long": "One-Time-Password", 
                "otp_sync_fail": "Token synchronization failed", 
                "otp_sync_invalid": "The username, password or token codes are not correct", 
                "otp_sync_success": "Token was synchronized", 
                "password": "Password", 
                "password_and_otp": "Password or Password+One-Time-Password", 
                "password_change_complete": "Password change complete", 
                "password_must_match": "Passwords must match", 
                "reset_failure": "Password reset was not successful.", 
                "reset_password": "Reset Password", 
                "reset_password_sentence": "Reset your password.", 
                "second_otp": "Second OTP", 
                "token_id": "Token ID", 
                "verify_password": "Verify Password"
            }, 
            "profile-menu": {
                "about": "About", 
                "configuration": "Customization", 
                "logout": "Log out", 
                "password_reset": "Change password", 
                "profile": "Profile"
            }, 
            "search": {
                "delete_confirm": "Are you sure you want to delete selected entries?", 
                "deleted": "${count} item(s) deleted", 
                "disable_confirm": "Are you sure you want to disable selected entries?", 
                "disabled": "${count} item(s) disabled", 
                "enable_confirm": "Are you sure you want to enable selected entries?", 
                "enabled": "${count} item(s) enabled", 
                "partial_delete": "Some entries were not deleted", 
                "placeholder": "Search", 
                "placeholder_filter": "Filter", 
                "quick_links": "Quick Links", 
                "select_all": "Select All", 
                "truncated": "Query returned more results than the configured size limit. Displaying the first ${counter} results.", 
                "unselect_all": "Unselect All"
            }, 
            "status": {
                "disable": "Disable", 
                "disabled": "Disabled", 
                "enable": "Enable", 
                "enabled": "Enabled", 
                "label": "Status", 
                "working": "Working"
            }, 
            "tabs": {
                "audit": "Audit", 
                "authentication": "Authentication", 
                "automember": "Automember", 
                "automount": "Automount", 
                "cert": "Certificates", 
                "dns": "DNS", 
                "hbac": "Host-Based Access Control", 
                "identity": "Identity", 
                "ipaserver": "IPA Server", 
                "network_services": "Network Services", 
                "policy": "Policy", 
                "role": "Role-Based Access Control", 
                "sudo": "Sudo", 
                "topology": "Topology", 
                "trust": "Trusts"
            }, 
            "true": "True", 
            "widget": {
                "api_browser": "API Browser", 
                "first": "First", 
                "last": "Last", 
                "next": "Next", 
                "page": "Page", 
                "prev": "Prev", 
                "undo": "Undo", 
                "undo_all": "Undo All", 
                "undo_all_title": "Undo all changes in this field.", 
                "undo_title": "Undo this change.", 
                "validation": {
                    "datetime": "Must be an UTC date/time value (e.g., \"2014-01-20 17:58:01Z\")", 
                    "decimal": "Must be a decimal number", 
                    "error": "Text does not match field pattern", 
                    "format": "Format error", 
                    "integer": "Must be an integer", 
                    "ip_address": "Not a valid IP address", 
                    "ip_v4_address": "Not a valid IPv4 address", 
                    "ip_v6_address": "Not a valid IPv6 address", 
                    "max_value": "Maximum value is ${value}", 
                    "min_value": "Minimum value is ${value}", 
                    "net_address": "Not a valid network address (examples: 2001:db8::/64, 192.0.2.0/24)", 
                    "parse": "Parse error", 
                    "port": "'${port}' is not a valid port", 
                    "positive_number": "Must be a positive number", 
                    "required": "Required field", 
                    "unsupported": "Unsupported value"
                }
            }
        }
    }, 
    "version": "4.6.90.pre2"
}
